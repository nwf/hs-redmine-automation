CSV Schema Notes
================

In addition to the data provided by the school (or whoever it is), we add five columns
through some magical process that is not clear to this author (i.e. nwf):

  * Reviewer A Email
  * Reviewer A Name
  * Reviewer B Email
  * Reviewer B Name
  * Box URL

Reviewer A should be a *student* and reviewer B should be *faculty*.  The import script
(below) depends on this when it picks assignees, trying reviewer B first.

Using csvRedmine.hs
===================

One-time Setup
--------------

At a Bourne shell::

  DPKGS=(
    libz-dev
    alex
    cabal-install
    happy
    ghc
  )
  sudo apt-get -t jessie-backports install ${DPKGS[@]}

  cabal update

  HPKGS=(
    cassava-conduit
    cmdlib
    wreq
  )

  cabal install -j --disable-tests ${HPKGS[@]}

Sorry about the need to explicitly pick a Debian release for new enough ghc.
Perhaps by the time you're reading this, it won't be necessary.

Running
-------

Review your proposed changes, if you like.  This is probably a good idea; look
through the output to see if something's likely to go wrong; the script tries
to flag anything really egregious with "ERR". ::

  runghc csvRedmine.hs \
    -h https://clsp-redmine.cs.jhu.edu \
    -a $your_auth_token \
    -p $project_name \
    upsert -n < foo.csv

Commit your changes to the server:

  runghc csvRedmine.hs \
    -h https://clsp-redmine.cs.jhu.edu \
    -a $your_auth_token \
    -p $project_name \
    upsert -x < foo.csv

The ``-x`` indicates that we should clobber existing entries; leave it off if
you are just out to create new ones.
